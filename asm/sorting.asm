.data

.text 

#单独的一个方法段，用来把9寄存器内的值转移到想要放置的地址的位置
place:
lui  $10,0x1001
ori  $10,$10,0x28
addi $14,$10,0
#9号寄存器的值存入了13号寄存器
addi $13,$9,0
#10寄存器存着要存入的位置的首地址
#11寄存器存着有多少个数
addi $11,$7,0
circle:
addi $11,$11,-1
lw   $12,0($13)
addi $13,$13,4
sw   $12,0($10)
addi $10,$10,4
beq  $11,$0,sort
j circle



#从7号寄存器拿出有多少个数据，9号寄存器存着初始地址，每个数据32位，将排序完的数据存入0x10010140中
# 可用的寄存器的编号为10-16
sort:
addi $9,$14,0
addi $29,$29,-16
sw   $1,12($29)
sw   $2,8($29)
sw   $3,4($29)
sw   $4,0($29)
# 2号寄存器存着当前数组的地址
addi $1,$9,0

addi $10,$0,0
addi $11,$0,0
addi $12,$0,0
addi $13,$0,0
addi $14,$0,0
addi $15,$0,0
addi $16,$0,0
#10号寄存器存着数量
#11寄存器存着当前的i的值
#12号寄存器辅助
addi $10,$7,0
for1loop:
slt  $12,$11,$10
beq  $12,$0,exit1

#13号寄存器存着j的值
addi $13,$11,-1
for2loop:
slti $12,$13,0
bne  $12,$0,exit2
#$14 = j*4
sll  $14,$13,2
# $15 = address的地址+j*4
add  $15,$1,$14
lw   $16,0($15) #$16 = array[j]
lw   $2,4($15)  #$2 = array[j+1]
slt  $12,$16,$2  #2大于等于16就让12为0
beq  $12,$0,exit2

#3里面存着array的首地址
addi $3,$9,0
#4里面存着j
addi $4,$13,0
j swap

adjust:
addi $13,$13,-1
j for2loop


exit2:
addi $11,$11,1
j for2loop
exit1:
lw  $1,12($29)
lw  $2,8($29)
lw  $3,4($29)
lw  $4,0($29)
#在这里加 j  address 可以回到原来的汇编地址
j for2loop



swap:
sll $14,$4,2
add $14,$14,$3
lw  $15,0($14)
lw  $16,4($14)
sw  $16,0($14)
sw  $15,4($14) 
j adjust

